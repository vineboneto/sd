# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import bingo_pb2 as proto_dot_bingo__pb2


class BingoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_stream(
                '/bingo.Bingo/Login',
                request_serializer=proto_dot_bingo__pb2.LoginRequest.SerializeToString,
                response_deserializer=proto_dot_bingo__pb2.LoginResponse.FromString,
                )
        self.Ready = channel.unary_unary(
                '/bingo.Bingo/Ready',
                request_serializer=proto_dot_bingo__pb2.ReadyRequest.SerializeToString,
                response_deserializer=proto_dot_bingo__pb2.ReadyResponse.FromString,
                )
        self.Play = channel.unary_stream(
                '/bingo.Bingo/Play',
                request_serializer=proto_dot_bingo__pb2.PlayRequest.SerializeToString,
                response_deserializer=proto_dot_bingo__pb2.GameStatusResponse.FromString,
                )
        self.CheckWin = channel.unary_unary(
                '/bingo.Bingo/CheckWin',
                request_serializer=proto_dot_bingo__pb2.WinCheckRequest.SerializeToString,
                response_deserializer=proto_dot_bingo__pb2.WinCheckResponse.FromString,
                )


class BingoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ready(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Play(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckWin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BingoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_stream_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=proto_dot_bingo__pb2.LoginRequest.FromString,
                    response_serializer=proto_dot_bingo__pb2.LoginResponse.SerializeToString,
            ),
            'Ready': grpc.unary_unary_rpc_method_handler(
                    servicer.Ready,
                    request_deserializer=proto_dot_bingo__pb2.ReadyRequest.FromString,
                    response_serializer=proto_dot_bingo__pb2.ReadyResponse.SerializeToString,
            ),
            'Play': grpc.unary_stream_rpc_method_handler(
                    servicer.Play,
                    request_deserializer=proto_dot_bingo__pb2.PlayRequest.FromString,
                    response_serializer=proto_dot_bingo__pb2.GameStatusResponse.SerializeToString,
            ),
            'CheckWin': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckWin,
                    request_deserializer=proto_dot_bingo__pb2.WinCheckRequest.FromString,
                    response_serializer=proto_dot_bingo__pb2.WinCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bingo.Bingo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Bingo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/bingo.Bingo/Login',
            proto_dot_bingo__pb2.LoginRequest.SerializeToString,
            proto_dot_bingo__pb2.LoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ready(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bingo.Bingo/Ready',
            proto_dot_bingo__pb2.ReadyRequest.SerializeToString,
            proto_dot_bingo__pb2.ReadyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Play(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/bingo.Bingo/Play',
            proto_dot_bingo__pb2.PlayRequest.SerializeToString,
            proto_dot_bingo__pb2.GameStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckWin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bingo.Bingo/CheckWin',
            proto_dot_bingo__pb2.WinCheckRequest.SerializeToString,
            proto_dot_bingo__pb2.WinCheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
